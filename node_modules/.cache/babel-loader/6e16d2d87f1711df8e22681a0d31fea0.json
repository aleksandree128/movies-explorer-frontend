{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aleks\\\\dev\\\\movies-explorer-frontend\\\\src\\\\components\\\\App\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Routes, Route, useLocation, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Header from \"../Header/Header.js\";\nimport Main from \"../Main/Main.js\";\nimport Footer from \"../Footer/Footer.js\";\nimport Login from \"../Login/Login.js\";\nimport Register from \"../Registr/Registr\";\nimport NotFound from \"../NotFound/NotFound.js\";\nimport SavedMovies from \"../SavedMovies/SavedMovies\";\nimport Movies from \"../Movie/Movie\";\nimport Profile from \"../Profile/Profile\";\nimport { mainApi } from \"../../utils/MainApi.js\";\nimport InfoTooltip from \"../InfoTooltip/InfoTooltip.js\";\nimport { CurrentUserContext } from \"../../context/CurrentUserContext\";\nimport ProtectedRoute from \"../ProtectedRoute/ProtectedRoute.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    pathname\n  } = useLocation();\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [message, setMessage] = useState({\n    successful: false,\n    message: \"\"\n  });\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const [savedMoviesList, setSavedMoviesList] = React.useState([]);\n\n  function handleRegistration(_ref) {\n    let {\n      name,\n      password,\n      email\n    } = _ref;\n    mainApi.registration({\n      name,\n      password,\n      email\n    }).then(res => {\n      if (res._id) {\n        handleSignIn({\n          email,\n          password\n        });\n      }\n    }).catch(err => {\n      setIsInfoTooltipOpen(true);\n      setMessage({\n        successful: false,\n        message: \"Пользователь с таким email уже существует.\"\n      });\n    });\n  }\n\n  useEffect(() => {\n    if (loggedIn) {\n      mainApi.getUserData().then(res => {\n        setCurrentUser(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [loggedIn]);\n\n  function handleLogin() {\n    setLoggedIn(true);\n    checkToken();\n  }\n\n  function checkToken() {\n    if (localStorage.getItem(\"jwt\")) {\n      const jwt = localStorage.getItem(\"jwt\");\n\n      if (jwt) {\n        mainApi.getUserData(jwt).then(data => {\n          if (data) {\n            setLoggedIn(true);\n            navigate(\"/movies\");\n            setCurrentUser(data);\n          }\n        }).catch(err => console.log(err));\n      }\n    }\n  }\n\n  useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n\n    if (jwt) {\n      mainApi.getUserData().then(data => {\n        if (data) {\n          setLoggedIn(true);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [navigate]);\n\n  function handleSignIn(_ref2) {\n    let {\n      email,\n      password\n    } = _ref2;\n    mainApi.login({\n      email,\n      password\n    }).then(data => {\n      if (data.token) {\n        localStorage.setItem(\"jwt\", data.token);\n        handleLogin();\n        navigate(\"/movies\");\n      }\n    }).catch(err => {\n      setErrorMessage(err.toString());\n    });\n  }\n\n  function closeInfoTooltip() {\n    setIsInfoTooltipOpen(false);\n  }\n\n  function handleSignOut(e) {\n    setCurrentUser({});\n    setLoggedIn(false);\n    localStorage.removeItem(\"jwt\");\n    localStorage.removeItem('movies');\n    localStorage.removeItem('inputValue');\n    localStorage.removeItem('query');\n    localStorage.removeItem('savedMoviesSearch');\n    localStorage.removeItem('movieSearch');\n    navigate(\"/\");\n  }\n\n  function handleUpdateUser(info) {\n    mainApi.updateUser(info).then(res => {\n      setCurrentUser(res);\n      setIsInfoTooltipOpen(true);\n      setMessage({\n        successful: true,\n        message: \"Данные профиля успешно изменены.\"\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleSaveMovie(movie) {\n    mainApi.addMovie(movie).then(newMovie => {\n      setSavedMoviesList([newMovie, ...savedMoviesList]);\n    }).catch(() => {\n      setIsInfoTooltipOpen(true);\n      setMessage({\n        successful: false,\n        message: \"Что-то пошло не так\"\n      });\n    });\n  }\n\n  function handleDeleteMovie(movie) {\n    const savedMovie = savedMoviesList.find(item => {\n      if (item.movieId === movie.id || item.movieId === movie.movieId) {\n        return item;\n      } else {\n        return savedMoviesList;\n      }\n    });\n    mainApi.deleteMovie(savedMovie._id).then(() => {\n      const newMoviesList = savedMoviesList.filter(m => {\n        if (movie.id === m.movieId || movie.movieId === m.movieId) {\n          return false;\n        } else {\n          return true;\n        }\n      });\n      setSavedMoviesList(newMoviesList);\n    }).catch(err => {\n      setIsInfoTooltipOpen(true);\n      setMessage({\n        successful: false,\n        message: \"Что-то пошло не так((\"\n      });\n    });\n  }\n\n  React.useEffect(() => {\n    if (loggedIn) {\n      mainApi.getMovies().then(data => {\n        setSavedMoviesList(data);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [loggedIn]);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [pathname === \"/\" || pathname === \"/movies\" || pathname === \"/saved-movies\" || pathname === \"/profile\" ? /*#__PURE__*/_jsxDEV(Header, {\n          loggedIn: loggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              onSignUp: handleRegistration,\n              errorMessage: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signin\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              onSignIn: handleSignIn,\n              errorMessage: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              loggedIn: loggedIn,\n              redirectPath: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 33\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/movies\",\n              element: /*#__PURE__*/_jsxDEV(Movies, {\n                user: currentUser,\n                onSavedMovie: savedMoviesList,\n                onSaveClick: handleSaveMovie,\n                onDeleteClick: handleDeleteMovie\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/saved-movies\",\n              element: /*#__PURE__*/_jsxDEV(SavedMovies, {\n                loggedIn: loggedIn,\n                user: currentUser,\n                savedMoviesList: savedMoviesList,\n                onDeleteClick: handleDeleteMovie\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/profile\",\n              element: /*#__PURE__*/_jsxDEV(Profile, {\n                onUpdateUser: handleUpdateUser,\n                onSignOut: handleSignOut\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), pathname === \"/\" || pathname === \"/movies\" || pathname === \"/saved-movies\" ? /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(InfoTooltip, {\n          isOpen: isInfoTooltipOpen,\n          onClose: closeInfoTooltip,\n          message: message.message,\n          successful: message.successful\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"qz8dhrPMGXIVYZorwEUaVWZXAuM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Routes","Route","useLocation","useNavigate","useState","useEffect","Header","Main","Footer","Login","Register","NotFound","SavedMovies","Movies","Profile","mainApi","InfoTooltip","CurrentUserContext","ProtectedRoute","App","pathname","isInfoTooltipOpen","setIsInfoTooltipOpen","message","setMessage","successful","loggedIn","setLoggedIn","currentUser","setCurrentUser","errorMessage","setErrorMessage","navigate","savedMoviesList","setSavedMoviesList","handleRegistration","name","password","email","registration","then","res","_id","handleSignIn","catch","err","getUserData","console","log","handleLogin","checkToken","localStorage","getItem","jwt","data","login","token","setItem","toString","closeInfoTooltip","handleSignOut","e","removeItem","handleUpdateUser","info","updateUser","handleSaveMovie","movie","addMovie","newMovie","handleDeleteMovie","savedMovie","find","item","movieId","id","deleteMovie","newMoviesList","filter","m","getMovies"],"sources":["C:/Users/aleks/dev/movies-explorer-frontend/src/components/App/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { Routes, Route, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Header from \"../Header/Header.js\";\r\nimport Main from \"../Main/Main.js\";\r\nimport Footer from \"../Footer/Footer.js\";\r\nimport Login from \"../Login/Login.js\";\r\nimport Register from \"../Registr/Registr\";\r\nimport NotFound from \"../NotFound/NotFound.js\";\r\nimport SavedMovies from \"../SavedMovies/SavedMovies\";\r\nimport Movies from \"../Movie/Movie\";\r\nimport Profile from \"../Profile/Profile\";\r\nimport { mainApi } from \"../../utils/MainApi.js\";\r\nimport InfoTooltip from \"../InfoTooltip/InfoTooltip.js\";\r\nimport { CurrentUserContext } from \"../../context/CurrentUserContext\";\r\nimport ProtectedRoute from \"../ProtectedRoute/ProtectedRoute.js\";\r\n\r\nfunction App() {\r\n    const { pathname } = useLocation();\r\n    const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\r\n    const [message, setMessage] = useState({ successful: false, message: \"\" });\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [currentUser, setCurrentUser] = useState({});\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const [savedMoviesList, setSavedMoviesList] = React.useState([]);\r\n    function handleRegistration({ name, password, email }) {\r\n        mainApi\r\n            .registration({ name, password, email })\r\n            .then((res) => {\r\n                if (res._id) {\r\n                    handleSignIn({ email, password });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setIsInfoTooltipOpen(true);\r\n                setMessage({\r\n                    successful: false,\r\n                    message: \"Пользователь с таким email уже существует.\",\r\n                });\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (loggedIn) {\r\n            mainApi\r\n                .getUserData()\r\n                .then((res) => {\r\n                    setCurrentUser(res);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, [loggedIn]);\r\n\r\n    function handleLogin() {\r\n        setLoggedIn(true);\r\n        checkToken();\r\n    }\r\n\r\n    function checkToken() {\r\n        if (localStorage.getItem(\"jwt\")) {\r\n            const jwt = localStorage.getItem(\"jwt\");\r\n            if (jwt) {\r\n                mainApi\r\n                    .getUserData(jwt)\r\n                    .then((data) => {\r\n                        if (data) {\r\n                            setLoggedIn(true);\r\n                            navigate(\"/movies\");\r\n                            setCurrentUser(data);\r\n                        }\r\n                    })\r\n                    .catch((err) => console.log(err));\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const jwt = localStorage.getItem(\"jwt\");\r\n        if (jwt) {\r\n            mainApi\r\n                .getUserData()\r\n                .then((data) => {\r\n                    if (data) {\r\n                        setLoggedIn(true);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, [navigate]);\r\n\r\n    function handleSignIn({ email, password }) {\r\n        mainApi\r\n            .login({ email, password })\r\n            .then((data) => {\r\n                if (data.token) {\r\n                    localStorage.setItem(\"jwt\", data.token);\r\n                    handleLogin();\r\n                    navigate(\"/movies\");\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setErrorMessage(err.toString());\r\n            });\r\n    }\r\n\r\n    function closeInfoTooltip() {\r\n        setIsInfoTooltipOpen(false);\r\n    }\r\n\r\n    function handleSignOut(e) {\r\n\r\n        setCurrentUser({});\r\n        setLoggedIn(false);\r\n        localStorage.removeItem(\"jwt\");\r\n        localStorage.removeItem('movies');\r\n        localStorage.removeItem('inputValue');\r\n        localStorage.removeItem('query');\r\n        localStorage.removeItem('savedMoviesSearch');\r\n        localStorage.removeItem('movieSearch');\r\n        navigate(\"/\");\r\n    }\r\n\r\n    function handleUpdateUser(info) {\r\n        mainApi\r\n            .updateUser(info)\r\n            .then((res) => {\r\n                setCurrentUser(res);\r\n                setIsInfoTooltipOpen(true);\r\n                setMessage({\r\n                    successful: true,\r\n                    message: \"Данные профиля успешно изменены.\",\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    function handleSaveMovie(movie) {\r\n        mainApi\r\n            .addMovie(movie)\r\n            .then((newMovie) => {\r\n                setSavedMoviesList([newMovie, ...savedMoviesList]);\r\n            })\r\n            .catch(() => {\r\n                setIsInfoTooltipOpen(true);\r\n                setMessage({\r\n                    successful: false,\r\n                    message: \"Что-то пошло не так\",\r\n                });\r\n            });\r\n    }\r\n\r\n    function handleDeleteMovie(movie) {\r\n        const savedMovie = savedMoviesList.find((item) => {\r\n            if (item.movieId === movie.id || item.movieId === movie.movieId) {\r\n                return item;\r\n            } else {\r\n                return savedMoviesList;\r\n            }\r\n        });\r\n        mainApi\r\n            .deleteMovie(savedMovie._id)\r\n            .then(() => {\r\n                const newMoviesList = savedMoviesList.filter((m) => {\r\n                    if (movie.id === m.movieId || movie.movieId === m.movieId) {\r\n                        return false;\r\n                    } else {\r\n                        return true;\r\n                    }\r\n                });\r\n                setSavedMoviesList(newMoviesList);\r\n            })\r\n            .catch((err) => {\r\n                setIsInfoTooltipOpen(true);\r\n                setMessage({\r\n                    successful: false,\r\n                    message: \"Что-то пошло не так((\",\r\n                });\r\n            });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (loggedIn) {\r\n            mainApi\r\n                .getMovies()\r\n                .then((data) => {\r\n                    setSavedMoviesList(data);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, [loggedIn]);\r\n\r\n    return (\r\n        <CurrentUserContext.Provider value={currentUser}>\r\n            <>\r\n                <div className=\"App\">\r\n                    {pathname === \"/\" ||\r\n                    pathname === \"/movies\" ||\r\n                    pathname === \"/saved-movies\" ||\r\n                    pathname === \"/profile\" ? (\r\n                        <Header loggedIn={loggedIn} />\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n\r\n                    <Routes>\r\n                        <Route exact path=\"/\" element={<Main />}></Route>\r\n\r\n                        <Route\r\n                            path=\"/signup\"\r\n                            element={\r\n                                <Register\r\n                                    onSignUp={handleRegistration}\r\n                                    errorMessage={errorMessage}\r\n                                />\r\n                            }\r\n                        ></Route>\r\n\r\n                        <Route\r\n                            path=\"/signin\"\r\n                            element={\r\n                                <Login\r\n                                    onSignIn={handleSignIn}\r\n                                    errorMessage={errorMessage}\r\n                                />\r\n                            }\r\n                        ></Route>\r\n\r\n                        <Route path=\"*\" element={<NotFound />}></Route>\r\n\r\n                        <Route\r\n                            element={\r\n                                <ProtectedRoute\r\n                                    loggedIn={loggedIn}\r\n                                    redirectPath=\"/\"\r\n                                />\r\n                            }\r\n                        >\r\n                            <Route\r\n                                path=\"/movies\"\r\n                                element={\r\n                                    <Movies\r\n                                        user={currentUser}\r\n                                        onSavedMovie={savedMoviesList}\r\n                                        onSaveClick={handleSaveMovie}\r\n                                        onDeleteClick={handleDeleteMovie}\r\n                                    />\r\n                                }\r\n                            />\r\n\r\n                            <Route\r\n                                path=\"/saved-movies\"\r\n                                element={\r\n                                    <SavedMovies\r\n                                        loggedIn={loggedIn}\r\n                                        user={currentUser}\r\n                                        savedMoviesList={savedMoviesList}\r\n                                        onDeleteClick={handleDeleteMovie}\r\n                                    />\r\n                                }\r\n                            ></Route>\r\n\r\n                            <Route\r\n                                path=\"/profile\"\r\n                                element={\r\n                                    <Profile\r\n                                        onUpdateUser={handleUpdateUser}\r\n                                        onSignOut={handleSignOut}\r\n                                    />\r\n                                }\r\n                            ></Route>\r\n                        </Route>\r\n                    </Routes>\r\n\r\n                    {pathname === \"/\" ||\r\n                    pathname === \"/movies\" ||\r\n                    pathname === \"/saved-movies\" ? (\r\n                        <Footer />\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                    <InfoTooltip\r\n                        isOpen={isInfoTooltipOpen}\r\n                        onClose={closeInfoTooltip}\r\n                        message={message.message}\r\n                        successful={message.successful}\r\n                    />\r\n                </div>\r\n            </>\r\n        </CurrentUserContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}