{"ast":null,"code":"class MainApi {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  registration(_ref2) {\n    let {\n      name,\n      email,\n      password\n    } = _ref2;\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    }).then(res => this._checkResponse(res));\n  }\n\n  login(_ref3) {\n    let {\n      password,\n      email\n    } = _ref3;\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password: password,\n        email: email\n      })\n    }).then(res => this._checkResponse(res));\n  }\n\n  getUserData(jwt) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => this._checkResponse(res));\n  }\n\n  editProfile(info) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: info.name,\n        email: info.email\n      })\n    }).then(this._checkResponse);\n  }\n\n  getMovies() {\n    return fetch(`${this._baseUrl}/movies`, {\n      method: \"GET\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => this._checkResponse(res));\n  }\n\n  addMovie(movie) {\n    return fetch(`${this._baseUrl}/movies`, {\n      method: \"POST\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        country: movie.country,\n        director: movie.director,\n        duration: movie.duration,\n        year: movie.year,\n        description: movie.description,\n        image: 'https://api.nomoreparties.co' + movie.image.url,\n        trailerLink: movie.trailerLink,\n        thumbnail: 'https://api.nomoreparties.co' + movie.thumbnail,\n        movieId: movie.id,\n        nameRU: movie.nameRU,\n        nameEN: movie.nameEN\n      })\n    }).then(this._checkResponse);\n  }\n\n  deleteMovie(movieId) {\n    return fetch(`${this._baseUrl}/movies/${movieId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(this._checkResponse);\n  }\n\n}\n\nexport const mainApi = new MainApi({\n  // baseUrl: `${window.location.protocol}${process.env.REACT_APP_API_URL ||\n  //    '//localhost:3001'}`,\n  baseUrl: \"http://api.korshinov.diplom.nomoredomains.sbs\",\n  //baseUrl: `${window.location.protocol}${process.env.REACT_APP_API_URL}`,\n  headers: {\n    Accept: \"application/json\"\n  }\n}); //https://api.maria.diploma.nomoredomains.xyz https://api.korshinov.diplom.nomoredomains.sbs","map":{"version":3,"names":["MainApi","constructor","baseUrl","headers","_baseUrl","_headers","_checkResponse","res","ok","json","Promise","reject","status","registration","name","email","password","fetch","method","body","JSON","stringify","then","login","getUserData","jwt","authorization","localStorage","getItem","editProfile","info","getMovies","addMovie","movie","country","director","duration","year","description","image","url","trailerLink","thumbnail","movieId","id","nameRU","nameEN","deleteMovie","mainApi","Accept"],"sources":["C:/Users/aleks/dev/movies-explorer-frontend/src/utils/MainApi.js"],"sourcesContent":["class MainApi {\r\n    constructor({ baseUrl, headers }) {\r\n        this._baseUrl = baseUrl;\r\n        this._headers = headers;\r\n    }\r\n\r\n    _checkResponse(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        }\r\n    }\r\n\r\n    registration({ name, email, password }) {\r\n        return fetch(`${this._baseUrl}/signup`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ name, email, password }),\r\n        }).then((res) => this._checkResponse(res));\r\n    }\r\n\r\n    login({ password, email }) {\r\n        return fetch(`${this._baseUrl}/signin`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                password: password,\r\n                email: email,\r\n            }),\r\n        }).then((res) => this._checkResponse(res));\r\n    }\r\n\r\n    getUserData(jwt) {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.getItem('jwt')}`,\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        }).then((res) => this._checkResponse(res));\r\n    }\r\n\r\n    editProfile(info) {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.getItem('jwt')}`,\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                name: info.name,\r\n                email: info.email,\r\n            }),\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    getMovies(){\r\n        return fetch(`${this._baseUrl}/movies`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.getItem('jwt')}`,\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        }).then((res) => this._checkResponse(res));\r\n    }\r\n\r\n    addMovie(movie){\r\n        return fetch(`${this._baseUrl}/movies`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.getItem('jwt')}`,\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                country: movie.country,\r\n                director: movie.director,\r\n                duration: movie.duration,\r\n                year: movie.year,\r\n                description: movie.description,\r\n                image: 'https://api.nomoreparties.co' + movie.image.url,\r\n                trailerLink: movie.trailerLink,\r\n                thumbnail: 'https://api.nomoreparties.co' + movie.thumbnail,\r\n                movieId: movie.id,\r\n                nameRU: movie.nameRU,\r\n                nameEN: movie.nameEN,\r\n            }),\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    deleteMovie(movieId){\r\n        return fetch(`${this._baseUrl}/movies/${movieId}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.getItem('jwt')}`,\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        }).then(this._checkResponse);\r\n    }\r\n}\r\n\r\nexport const mainApi = new MainApi({\r\n    // baseUrl: `${window.location.protocol}${process.env.REACT_APP_API_URL ||\r\n    //    '//localhost:3001'}`,\r\n    baseUrl: \"http://api.korshinov.diplom.nomoredomains.sbs\",\r\n    //baseUrl: `${window.location.protocol}${process.env.REACT_APP_API_URL}`,\r\n    headers: {\r\n        Accept: \"application/json\",\r\n    },\r\n});\r\n\r\n\r\n//https://api.maria.diploma.nomoredomains.xyz https://api.korshinov.diplom.nomoredomains.sbs\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}